#!/bin/bash
# Copyright (C) 1999-2007  IMSEC GmbH
# Copyright (C) 2004-2007  Logintas AG
#
# This file is part of ISiBackup.
#
#    ISiBackup is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    ISiBackup is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

PROGRAM_IDENT="cleanbackups"
PROGRAM_VERSION="1.6.0~devel"
COPYRIGHT="\
Copyright (C) 1999-2007  IMSEC GmbH
Copyright (C) 2004-2007  Logintas AG"
LIABILITY="This program comes with NO WARRANTY, to the extent permitted by law."
AUTHORS="Written by Marcus Holthaus, Simon Huerlimann and Adrian Friedli."

lMaxUse=95
lStartAge=720
lSpare=10
lVerbose=0

while [ $# -gt 0 ] ; do
  case $1 in
    -s) lMaxUse=$2 ; shift 2 ;;
    -m) lSpare=$2; shift 2 ;;
    -v) lVerbose=1; shift ;;
    *) echo "unknown parameter $1. exiting." ; exit 1
  esac
done

get_free () {
   #using stat is much safer than df
   eval echo "$(stat -f "$lDir" -c \$\[100-100*%a/%b\])"
}

cDays=$lStartAge
if [ $lVerbose -ge 1 ] ; then 
  echo "clean backups by deleting all differential backups more than $lSpare days old or until less than $lMaxUse% disk space used."
fi
sleep 2s
for lDir in /var/backups/isibackup/{,*/,*/isibackup/}diff ; do
  if [ -d "$lDir" ] ; then
    lFree=$(get_free)
    while [ $cDays -gt $lSpare -a $(get_free) -gt $lMaxUse ] ; do
      lDate="$(date -d "$cDays days ago" "+%Y-%m-%d")"
      if [ $lVerbose -ge 1 ] ; then 
        echo -n "$lFree% in $lDir... "
        echo -n "$cDays days ($lDate) ..."
      fi
      for lDelDir in $(find $lDir -maxdepth 2 -name "$lDate" -type d) ; do
        if [ $lVerbose -ge 1 ] ; then 
          echo
        fi
        echo -n "    cleaning diff backups in $lDelDir ... "
        rm -rf $lDelDir
        echo -n "done."
        lFree=$(get_free)
        echo
        if [ $lFree -le $lMaxUse ] ; then
          break
        fi
      done
      if [ $lVerbose -ge 1 ] ; then 
        echo -n $'\r'
      fi
      cDays=$(( $cDays - 1 ));
    done
  fi
done
