#!/bin/bash
	 ##############
  ### config ###
  ##############

  #############
  ### mysql ###
  #############

  if [ -d /var/lib/mysql ] ; then
   lMySqlUserName="backup"
   lMySqlPassword="$(</etc/isibackup/${OPT_SET}/mysql.backup.pw)"
   lMySqlDumpTargetFile="$lTargetDir/mysql.dump.bz2.gpg"

   if [ $OPT_MODE == "full" ] ; then
    rm -f "${lMySqlDumpTargetFile}"
    echo -n "dumping mysql data ..."
    mysqldump -u "$lMySqlUserName" --max_allowed_packet=99M --password="$lMySqlPassword" --single-transaction --flush-logs --delete-master-logs --master-data=2 --all-databases | bzip2 | eval gpg --batch --encrypt "$Recipient_Flags" > "$lMySqlDumpTargetFile"
    _RES=${PIPESTATUS[*]}
    for res in $_RES; do
      if [[ ( $res > 0 ) ]]; then
        echo "failed" ; return 1
      fi
    done
    echo "done"
    change_perms "$lMySqlDumpTargetFile"
    echo "result: $(ls -la $lMySqlDumpTargetFile)"
   else
    # if we make a diff backup, check that binlog is activiated and full backup is available.
    echo -n "flushing mysql logs..."
    if mysqladmin -u "$lMySqlUserName" --password="$lMySqlPassword" flush-logs ; then
      echo "done"
    else
      echo "failed" ; return 1
    fi
   fi
  fi

  ################
  ### postgres ###
  ################

  if [ -d /var/lib/postgres ] ; then
    echo -n "dumping postgres data ..."
    lPostgresUserName="backup"
    lPostgresPassword="$(</etc/isibackup/${OPT_SET}/postgres.backup.pw)"
    lPostgresDumpTargetFile="$lTargetDir/postgres.dump.bz2.gpg"
    rm -f "${lPostgresDumpTargetFile}"
    sudo -u postgres pg_dumpall | bzip2 | eval gpg --batch --encrypt $Recipient_Flags > "$lPostgresDumpTargetFile"
    if [ -e "${lPostgresDumpTargetFile}" -a -s "${lPostgresDumpTargetFile}" ] ; then
      echo "done"
      change_perms "$lPostgresDumpTargetFile"
      echo "result: $(ls -la $lPostgresDumpTargetFile)"
    else
      echo "failed" ; return 1
    fi
  fi
'
